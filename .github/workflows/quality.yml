# Licensed under the Apache License: http://www.apache.org/licenses/LICENSE-2.0
# For details: https://github.com/nedbat/coveragepy/blob/master/NOTICE.txt

name: "Quality"

on:
  push:
    branches:
      - master
      - nedbat/*
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

permissions:
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  changed:
    name: "Check what files changed"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      python: ${{ steps.filter.outputs.python }}
      docs: ${{ steps.filter.outputs.docs }}
      actions: ${{ steps.filter.outputs.actions }}
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: "Examine changed files"
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          filters: |
            python:
              - "**.py"
            docs:
              - "doc/**"
            actions:
              - ".github/workflows/**"

  lint:
    name: "Pylint etc"
    # Because pylint can report different things on different OS's (!)
    # (https://github.com/PyCQA/pylint/issues/3489), run this on Mac where local
    # pylint gets run.
    # GitHub is rolling out macos 14, but it doesn't have Python 3.8 or 3.9.
    # https://mastodon.social/@hugovk/112320493602782374
    runs-on: macos-13

    needs: changed
    if: ${{ needs.changed.outputs.python == 'true' }}

    steps:
      - name: "Check out the repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: "Install Python"
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: "3.9" # Minimum of PYVERSIONS
          cache: pip
          cache-dependency-path: 'requirements/*.pip'

      - name: "Install dependencies"
        run: |
          python -m pip install -r requirements/tox.pip

      - name: "Tox lint"
        run: |
          python -m tox -e lint

  mypy:
    name: "Check types"
    runs-on: ubuntu-latest

    needs: changed
    if: ${{ needs.changed.outputs.python == 'true' }}

    steps:
      - name: "Check out the repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: "Install Python"
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: "3.9" # Minimum of PYVERSIONS
          cache: pip
          cache-dependency-path: 'requirements/*.pip'

      - name: "Install dependencies"
        run: |
          python -m pip install -r requirements/tox.pip

      - name: "Tox mypy"
        run: |
          python -m tox -e mypy

  doc:
    name: "Build docs"
    runs-on: ubuntu-latest

    needs: changed
    if: ${{ needs.changed.outputs.docs == 'true' }}

    steps:
      - name: "Check out the repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: "Install Python"
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: "3.11" # Doc version from PYVERSIONS
          cache: pip
          cache-dependency-path: 'requirements/*.pip'

      - name: "Show environment"
        run: |
          set -xe
          python -VV
          python -m site
          env | sort

      - name: "Install dependencies"
        run: |
          set -xe
          python -m pip install -r requirements/tox.pip

      - name: "Tox doc"
        run: |
          python -m tox -e doc

  zizmor:
    name: "Zizmor GHA security check"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read

    needs: changed
    if: ${{ needs.changed.outputs.actions == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 #v5.4.2
        with:
          enable-cache: false

      - name: Run zizmor
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: uvx zizmor --pedantic .github/workflows
